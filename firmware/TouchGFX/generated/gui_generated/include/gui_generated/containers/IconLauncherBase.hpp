/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef ICONLAUNCHERBASE_HPP
#define ICONLAUNCHERBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>

class IconLauncherBase : public touchgfx::Container
{
public:
    IconLauncherBase();
    virtual ~IconLauncherBase() {}
    virtual void initialize();

    /*
     * Virtual Action Handlers
     */
    virtual void buttonClicked()
    {
        // Override and implement this function in IconLauncher
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::TextAreaWithOneWildcard text;
    touchgfx::ButtonWithIcon button;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXT_SIZE = 16;
    touchgfx::Unicode::UnicodeChar textBuffer[TEXT_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<IconLauncherBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // ICONLAUNCHERBASE_HPP
