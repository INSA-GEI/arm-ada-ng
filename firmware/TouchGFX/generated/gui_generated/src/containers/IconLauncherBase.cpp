/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/IconLauncherBase.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"

IconLauncherBase::IconLauncherBase() :
    buttonCallback(this, &IconLauncherBase::buttonCallbackHandler)
{
    setWidth(120);
    setHeight(120);
    text.setXY(32, 7);
    text.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 252, 252));
    text.setLinespacing(0);
    text.setRotation(touchgfx::TEXT_ROTATE_180);
    Unicode::snprintf(textBuffer, TEXT_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID5).getText());
    text.setWildcard(textBuffer);
    text.resizeToCurrentText();
    text.setTypedText(touchgfx::TypedText(T_SINGLEUSEID4));

    button.setXY(20, 34);
    button.setBitmaps(touchgfx::Bitmap(BITMAP_LAUNCHER_BUTTON_RELEASED_ID), touchgfx::Bitmap(BITMAP_LAUNCHER_BUTTON_CLICKED_ID), touchgfx::Bitmap(BITMAP_APP_ICON_LARGE_ID), touchgfx::Bitmap(BITMAP_APP_ICON_LARGE_ID));
    button.setIconXY(8, 8);
    button.setAction(buttonCallback);

    add(text);
    add(button);
}

void IconLauncherBase::initialize()
{

}

void IconLauncherBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button)
    {
        //InteractionButtonClicked
        //When button clicked call virtual function
        //Call buttonClicked
        buttonClicked();
    }
}
